#!/bin/bash -

build_images() {
    local forkcount=1

    LISTCMD=
    case "$1" in
    -j ) forkcount=8; shift;;
    -l ) LISTCMD=1; shift;;
    esac

    (:&wait -n) >/dev/null 2>&1 || forkcount=0
    [ "$LISTCMD" != '' ] && forkcount=0

    [ "$#" -eq 0 ] &&
	set -- \
	    unstable bullseye buster xenial bionic focal

    [ "$#" -ge 1 -a "$1" = alldebian ] &&
	set -- \
	    potato woody sarge etch lenny squeeze wheezy \
	    jessie stretch buster bullseye unstable
	    # Future: bookworm

    [ "$#" -ge 1 -a "$1" = debian ] &&
	set -- unstable bullseye buster stretch

    [ "$#" -ge 1 -a "$1" = ubuntu ] &&
	set -- groovy focal bionic xenial trusty

    [ "$#" -ge 1 -a "$1" = ubuntults ] &&
	set -- dapper hardy lucid precise trusty xenial bionic focal

    [ "$#" -ge 1 -a "$1" = allubuntu ] &&
	set -- \
	    warty hoary breezy dapper edgy feisty gutsy hardy intrepid \
	    jaunty karmic lucid maverick natty oneiric precise \
	    quantal raring saucy trusty utopic vivid wily xenial \
	    yakkety zesty artful bionic cosmic disco eoan focal groovy

    [ "$#" -ge 1 -a "$1" = alldevuan ] &&
	set -- ascii beowulf chimaera ceres

    [ "$#" -ge 1 -a "$1" = kali ] &&
	set -- kali-dev kali-rolling kali-last-snapshot

    # WARNING: Distro Tanglu is discontinued
    [ "$#" -ge 1 -a "$1" = tanglu ] &&
	set -- aequorea bartholomea chromodoris dasyatis

    [ "$#" -ge 1 -a "$1" = all ] &&
	set -- \
	    potato woody sarge etch lenny squeeze wheezy \
	    jessie stretch buster bullseye unstable \
	    warty hoary breezy dapper edgy feisty gutsy hardy intrepid \
	    jaunty karmic lucid maverick natty oneiric precise \
	    quantal raring saucy trusty utopic vivid wily xenial \
	    yakkety zesty artful bionic cosmic disco eoan focal groovy \
	    kali-dev kali-rolling kali-last-snapshot \
	    ascii beowulf chimaera ceres

    local Q=-q
    local RELEASE ARCH
    local runcount

    [ "$#" -eq 1 ] && forkcount=1
    [ "$forkcount" -le 1 ] && Q=

    for RELEASE
    do
	for ARCH in amd64 i386
	do
	    # Not compiled for i386 or always compiled for i386
	    [ "$RELEASE" = amber -a "$ARCH" = i386 ] && continue # Missing
	    [ "$RELEASE" = potato -a "$ARCH" = i386 ] && continue # Is default
	    [ "$RELEASE" = woody -a "$ARCH" = i386 ] && continue # Is default
	    [ "$RELEASE" = sarge -a "$ARCH" = i386 ] && continue # Is default

	    # These fail on touching a file !?
	    [ "$RELEASE" = focal -a "$ARCH" = i386 ] && continue # Humm.
	    [ "$RELEASE" = groovy -a "$ARCH" = i386 ] && continue # Humm.

	    # vdso nuisance
	    [ "$RELEASE" = warty -a "$ARCH" = i386 ] && continue
	    [ "$RELEASE" = hoary -a "$ARCH" = i386 ] && continue

	    if [ "$forkcount" -le 1 ]
	    then
		build_image "$RELEASE" "$ARCH" $Q
	    else
		build_image "$RELEASE" "$ARCH" $Q &

		runcount=$((runcount + 1))
		[ "$runcount" -ge "$forkcount" ] && {
		    wait -n
		    runcount=$((runcount - 1)) ;:
		}
	    fi
	done
    done
    [ "$forkcount" -ne 0 ] && wait
    exit 0
}

build_image() {
    local RELEASE="$1"
    local ARCH="$2"
    local Q="$3"

    unset DEBSCRIPT
    unset DEBOPTIONS
    MIRROR=
    DISTRO=debian

    case $RELEASE in
    potato ) DEBOPTIONS='--no-check-gpg' ;;
    wheezy ) MIRROR=http://archive.debian.org/debian ;;

    potato|woody|sarge|etch|lenny|squeeze|wheezy|jessie ) ;;
    stretch|buster|bullseye|bookworm|unstable ) ;;

    aequorea|bartholomea|chromodoris|dasyatis)
	DISTRO=tanglu
	echo >&2 WARNING: Distro Tanglu is discontinued
	;;

    amber ) DISTRO=pureos ;;

    * ) DISTRO=
	[ -z "$DISTRO" ] && ubuntu_versions "$RELEASE"
	[ -z "$DISTRO" ] && devuan_versions "$RELEASE"
	[ -z "$DISTRO" ] && kali_versions "$RELEASE"
	[ -z "$DISTRO" ] && {
	    echo "WARNING: Unknown release $RELEASE-$ARCH">&2
	    DISTRO=unknown
	}
	;;
    esac

    local DOCKERFILE="$(dirname "$0")/Dockerfile"
    local NARCH="$ARCH"; [ "$NARCH" = amd64 ] && NARCH=

    [ "$LISTCMD" != '' ] && {
	echo docker build $Q -t rdb/$DISTRO:$RELEASE${NARCH:+-$ARCH} \
	    --build-arg=RELEASE=$RELEASE \
	    ${NARCH:+--build-arg=ARCH=$ARCH} \
	    ${MIRROR:+--build-arg=MIRROR=$MIRROR} \
	    ${DEBSCRIPT:+--build-arg=DEBSCRIPT=$DEBSCRIPT} \
	    ${DEBOPTIONS:+--build-arg=DEBOPTIONS="$DEBOPTIONS"} \
	    -
	return 0
    }

    echo "Building $RELEASE${NARCH:+-$ARCH}"
    (   set -ex
	docker build $Q -t rdb/$DISTRO:$RELEASE${NARCH:+-$ARCH} \
	    --build-arg=RELEASE=$RELEASE \
	    ${NARCH:+--build-arg=ARCH=$ARCH} \
	    ${MIRROR:+--build-arg=MIRROR=$MIRROR} \
	    ${DEBSCRIPT:+--build-arg=DEBSCRIPT=$DEBSCRIPT} \
	    ${DEBOPTIONS:+--build-arg=DEBOPTIONS="$DEBOPTIONS"} \
	    -< "$DOCKERFILE"
    ) || return 1

    for STAGE in $(sed -n 's/^FROM.*AS \+//p' "$DOCKERFILE")
    do
	docker build -q --target=$STAGE \
		-t temp/$STAGE:$RELEASE${NARCH:+-$ARCH} \
	    --build-arg=RELEASE=$RELEASE \
	    ${NARCH:+--build-arg=ARCH=$ARCH} \
	    ${MIRROR:+--build-arg=MIRROR=$MIRROR} \
	    ${DEBSCRIPT:+--build-arg=DEBSCRIPT=$DEBSCRIPT} \
	    ${DEBOPTIONS:+--build-arg=DEBOPTIONS="$DEBOPTIONS"} \
	    -< "$DOCKERFILE"
    done
    echo "Done $RELEASE${NARCH:+-$ARCH}"
}

ubuntu_versions() {

    local RELEASE="$1"
    case "$RELEASE" in
    warty )
	# 4.10 -- Warty Warthog
	MIRROR=oldubuntu
	DISTRO=ubuntu
	DEBOPTIONS='--no-check-gpg'
	;;
    hoary )
	# 5.04 -- Hoary Hedgehog
	MIRROR=oldubuntu
	DISTRO=ubuntu
	DEBOPTIONS='--no-check-gpg'
	;;
    breezy )
	# 5.10 -- Breezy Badger
	MIRROR=oldubuntu
	DISTRO=ubuntu
	;;
    dapper )
	# 6.06 LTS -- Dapper Drake
	MIRROR=oldubuntu
	DISTRO=ubuntu
	;;
    edgy )
	# 6.10 -- Edgy Eft
	MIRROR=oldubuntu
	DISTRO=ubuntu
	;;
    feisty )
	# 7.04 -- Feisty Fawn
	MIRROR=oldubuntu
	DISTRO=ubuntu
	;;
    gutsy )
	# 7.10 -- Gutsy Gibbon
	MIRROR=oldubuntu
	DISTRO=ubuntu
	DEBOPTIONS='--no-check-gpg'
	;;
    hardy )
	# 8.04 LTS -- Hardy Heron
	MIRROR=oldubuntu
	DISTRO=ubuntu
	DEBOPTIONS='--no-check-gpg'
	;;
    intrepid )
	# 8.10 -- Intrepid Ibex
	MIRROR=oldubuntu
	DISTRO=ubuntu
	DEBOPTIONS='--no-check-gpg'
	;;
    jaunty )
	# 9.04 -- Jaunty Jackalope
	MIRROR=oldubuntu
	DISTRO=ubuntu
	DEBOPTIONS='--no-check-gpg'
	;;
    karmic )
	# 9.10 -- Karmic Koala
	MIRROR=oldubuntu
	DISTRO=ubuntu
	DEBOPTIONS='--no-check-gpg'
	;;
    lucid )
	# 10.04 LTS -- Lucid Lynx
	MIRROR=oldubuntu
	DISTRO=ubuntu
	DEBOPTIONS='--no-check-gpg'
	;;
    maverick )
	# 10.10 -- Maverick Meerkat
	MIRROR=oldubuntu
	DISTRO=ubuntu
	DEBOPTIONS='--no-check-gpg'
	;;
    natty )
	# 11.04 -- Natty Narwhal
	MIRROR=oldubuntu
	DISTRO=ubuntu
	DEBOPTIONS='--no-check-gpg'
	;;
    oneiric )
	# 11.10 -- Oneiric Ocelot
	MIRROR=oldubuntu
	DISTRO=ubuntu
	DEBOPTIONS='--no-check-gpg'
	;;
    precise )
	# 12.04 LTS -- Precise Pangolin
	MIRROR=ubuntu
	DISTRO=ubuntu
	DEBOPTIONS='--no-check-gpg'
	;;
    quantal )
	# 12.10 -- Quantal Quetzal
	MIRROR=oldubuntu
	DISTRO=ubuntu
	;;
    raring )
	# 13.04 -- Raring Ringtail
	MIRROR=oldubuntu
	DISTRO=ubuntu
	;;
    saucy )
	# 13.10 -- Saucy Salamander
	MIRROR=oldubuntu
	DISTRO=ubuntu
	;;
    trusty )
	# 14.04 LTS -- Trusty Tahr
	MIRROR=ubuntu
	DISTRO=ubuntu
	;;
    utopic )
	# 14.10 -- Utopic Unicorn
	MIRROR=oldubuntu
	DISTRO=ubuntu
	;;
    vivid )
	# 15.04 -- Vivid Vervet
	MIRROR=oldubuntu
	DISTRO=ubuntu
	;;
    wily )
	# 15.10 -- Wily Werewolf
	MIRROR=oldubuntu
	DISTRO=ubuntu
	;;
    xenial )
	# 16.04 LTS -- Xenial Xerus
	MIRROR=ubuntu
	DISTRO=ubuntu
	;;
    yakkety )
	# 16.10 -- Yakkety Yak
	MIRROR=oldubuntu
	DISTRO=ubuntu
	;;
    zesty )
	# 17.04 -- Zesty Zapus
	MIRROR=oldubuntu
	DISTRO=ubuntu
	;;
    artful )
	# 17.10 -- Artful Aardvark
	MIRROR=oldubuntu
	DISTRO=ubuntu
	;;
    bionic )
	# 18.04 LTS -- Bionic Beaver
	MIRROR=ubuntu
	DISTRO=ubuntu
	;;
    cosmic )
	# 18.10 -- Cosmic Cuttlefish
	MIRROR=oldubuntu
	DISTRO=ubuntu
	;;
    disco )
	# 19.04 -- Disco Dingo
	MIRROR=oldubuntu
	DISTRO=ubuntu
	;;
    eoan )
	# 19.10 -- Eoan Ermine
	MIRROR=ubuntu
	DISTRO=ubuntu
	;;
    focal )
	# 20.04 LTS -- Focal Fossa
	MIRROR=ubuntu
	DISTRO=ubuntu
	;;
    groovy )
	# 20.10 -- Groovy Gorilla
	MIRROR=ubuntu
	DISTRO=ubuntu
	DEBSCRIPT=eoan
	;;
    esac

    case "$MIRROR" in
    oldubuntu )
	case "$RELEASE" in
	# This line from /usr/share/debootstrap/scripts/gutsy
	gutsy|hardy|intrepid|jaunty|karmic|lucid|maverick|natty|oneiric|precise|quantal|raring|saucy|utopic|vivid|wily|yakk)
	    # Already old
	    unset MIRROR
	    ;;
	* ) MIRROR=http://old-releases.ubuntu.com/ubuntu
	    ;;
	esac
	;;
    ubuntu)
	unset MIRROR
	[ "$DEBSCRIPT" != '' ] &&
	    MIRROR=http://archive.ubuntu.com/ubuntu
	;;
    esac
}

devuan_versions() {
    local RELEASE="$1"
    case "$RELEASE" in
    jessie )
	MIRROR=http://deb.devuan.org/merged
	DISTRO=devuan
	DEBSCRIPT=ascii
	;;
    ascii|beowulf|chimaera|ceres )
	DISTRO=devuan
	;;
    devuan ) # Alias for devuan/stable
	DISTRO=devuan
	;;
    esac
}

kali_versions() {
    local RELEASE="$1"
    case "$RELEASE" in
    kali-rolling|kali-last-snapshot|kali-dev )
	MIRROR=https://http.kali.org/kali
	DISTRO=kali
	DEBSCRIPT=kali
	DEBOPTIONS='--no-check-gpg'
	;;
    esac
}

version_notes() {
case `cat /etc/debian_version` in
1.1* ) APTID=deb.buzz ;;
1.2* ) APTID=deb.rex ;;
1.3* ) APTID=deb.bo ;;
2.0* ) APTID=deb.hamm ;;
2.1* ) APTID=deb.slink ;;
2.2* ) APTID=deb.potato ;;
3.0* ) APTID=deb.woody ;;
3.1* ) APTID=deb.sarge ;;
4.* ) APTID=deb.etch ;;
5.* ) APTID=deb.lenny ;;
6.* ) APTID=deb.squeeze ;;
7.* ) APTID=deb.wheezy ;;
8.* ) APTID=deb.jessie ;;
9.* ) APTID=deb.stretch ;;
10.* ) APTID=deb.buster ;;
esac
}

build_images "$@"

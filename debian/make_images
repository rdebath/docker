#!/bin/bash -

build_images() {
    LISTCMD=
    REPOPREFIX=reg.xz/
    DOPUSH=
    ARCHLIST='default i386'
    STOPONFIRSTERROR=1
    while [ "${1#-}" != "$1" ]
    do
	case "$1" in
	-l ) LISTCMD=1; shift;;
	-R ) REPOPREFIX="${2:+$2/}" ; shift 2;;
	-P ) DOPUSH=yes; shift;;
	-3|-i386 ) ARCHLIST=i386 ; shift ;;
	-amd64 ) ARCHLIST=amd64 ; shift ;;
	-d ) ARCHLIST=default ; shift ;;
	-k ) STOPONFIRSTERROR=0 ; shift ;;
	* ) echo >&2 "Unknown Option $1" ; exit 1;;
	esac
    done

    [ "$#" -eq 0 ] &&
	set -- \
	    unstable bookworm bullseye xenial bionic focal

    [ "$#" -ge 1 -a "$1" = alldebian ] &&
	set -- \
	    potato woody sarge etch lenny squeeze wheezy jessie stretch \
	    buster bullseye bookworm trixie unstable sid-x32

    [ "$#" -ge 1 -a "$1" = debian ] &&
	set -- unstable bookworm bullseye buster

    [ "$#" -ge 1 -a "$1" = ubuntu ] &&
	set -- mantic jammy

    [ "$#" -ge 1 -a "$1" = ubuntults ] &&
	set -- dapper hardy lucid precise trusty xenial bionic focal jammy

    [ "$#" -ge 1 -a "$1" = allubuntu ] &&
	set -- \
	    warty hoary breezy dapper edgy feisty gutsy hardy intrepid \
	    jaunty karmic lucid maverick natty oneiric precise \
	    quantal raring saucy trusty utopic vivid wily xenial \
	    yakkety zesty artful bionic cosmic disco eoan focal groovy \
	    hirsute impish jammy kinetic lunar mantic

    [ "$#" -ge 1 -a "$1" = alldevuan ] &&
	set -- ascii beowulf chimaera daedalus excalibur ceres

    [ "$#" -ge 1 -a "$1" = kali ] &&
	set -- kali-dev kali-rolling kali-last-snapshot

    # WARNING: Distro Tanglu is discontinued
    [ "$#" -ge 1 -a "$1" = tanglu ] &&
	set -- aequorea bartholomea chromodoris dasyatis

    [ "$#" -ge 1 -a "$1" = all ] &&
	set -- \
	    potato woody sarge etch lenny squeeze wheezy \
	    jessie stretch buster bullseye bookworm trixie unstable \
	    \
	    warty hoary breezy dapper edgy feisty gutsy hardy intrepid \
	    jaunty karmic lucid maverick natty oneiric precise \
	    quantal raring saucy trusty utopic vivid wily xenial \
	    yakkety zesty artful bionic cosmic disco eoan focal groovy \
	    hirsute impish jammy kinetic lunar mantic \
	    \
	    kali-dev kali-rolling kali-last-snapshot \
	    ascii beowulf chimaera daedalus excalibur ceres

    local RELEASE ARCH
    local runcount

    for RELEASE
    do
	for ARCH in $ARCHLIST
	do
	    [ "$RELEASE" = sid-x32 -a "$ARCH" = i386 ] && continue # Just wrong

	    # Not compiled for i386 or always compiled for i386
	    [ "$RELEASE" = potato -a "$ARCH" = i386 ] && continue # Is default
	    [ "$RELEASE" = woody -a "$ARCH" = i386 ] && continue # Is default
	    [ "$RELEASE" = sarge -a "$ARCH" = i386 ] && continue # Is default

	    # These fail if libseccomp2 < 2.4.3-1+b1
	    # [ "$RELEASE" = focal -a "$ARCH" = i386 ] && continue # Humm.
	    # [ "$RELEASE" = groovy -a "$ARCH" = i386 ] && continue # Humm.

	    # vdso nuisance
	    [ "$RELEASE" = warty -a "$ARCH" = i386 ] && continue
	    [ "$RELEASE" = hoary -a "$ARCH" = i386 ] && continue

	    build_image "$RELEASE" "$ARCH" || {
		RV=$?
		[ "$STOPONFIRSTERROR" = 0 ] || exit $RV
	    }
	done
    done
    exit 0
}

build_image() {
    local RELEASE="$1"
    local ARCH="$2"
    local Q="$3"

    unset DEBSCRIPT
    unset DEBOPTIONS
    MIRROR=
    DISTRO=debian

    case $RELEASE in
    potato|woody|sarge|etch|lenny|squeeze|wheezy|jessie ) ;;
    stretch|buster|bullseye|bookworm|trixie|sid|unstable ) ;;

    sid-x32 )
	RELEASE=sid
	MIRROR=http://ftp.ports.debian.org/debian-ports
	ARCH=x32
	;;

    aequorea|bartholomea|chromodoris|dasyatis)
	DISTRO=tanglu
	echo >&2 WARNING: Distro Tanglu is discontinued
	;;

    amber|byzantium|crimson ) DISTRO=pureos ;;

    kali-rolling|kali-last-snapshot|kali-dev ) DISTRO=kali ;;

    * ) DISTRO=
	[ -z "$DISTRO" ] && ubuntu_versions "$RELEASE"
	[ -z "$DISTRO" ] && devuan_versions "$RELEASE"
	[ -z "$DISTRO" ] && {
	    echo "WARNING: Unknown release $RELEASE-$ARCH">&2
	    DISTRO=linux
	}
	;;
    esac

    [ "$ARCH" = default ] && ARCH=amd64

    local DOCKERFILE="$(dirname "$0")/Dockerfile"
    local NARCH="$ARCH"; [ "$NARCH" = amd64 ] && NARCH=

    [ "$LISTCMD" != '' ] && {
	echo docker build $Q \
	    -t $REPOPREFIX$DISTRO:${RELEASE%:*}${NARCH:+-$ARCH} \
	    --build-arg=RELEASE=$RELEASE \
	    ${NARCH:+--build-arg=ARCH=$ARCH} \
	    ${MIRROR:+--build-arg=MIRROR=$MIRROR} \
	    ${DEBSCRIPT:+--build-arg=DEBSCRIPT=$DEBSCRIPT} \
	    ${DEBOPTIONS:+--build-arg=DEBOPTIONS="$DEBOPTIONS"} \
	    "-<Dockerfile"
	return 0
    }

    echo "Building $RELEASE${NARCH:+-$ARCH}"
    (   set -ex
	docker build $Q \
	    -t $REPOPREFIX$DISTRO:${RELEASE%:*}${NARCH:+-$ARCH} \
	    --build-arg=RELEASE=$RELEASE \
	    ${NARCH:+--build-arg=ARCH=$ARCH} \
	    ${MIRROR:+--build-arg=MIRROR=$MIRROR} \
	    ${DEBSCRIPT:+--build-arg=DEBSCRIPT=$DEBSCRIPT} \
	    ${DEBOPTIONS:+--build-arg=DEBOPTIONS="$DEBOPTIONS"} \
	    -< "$DOCKERFILE"
    ) || return 1

    [ "$DOPUSH" = yes ] &&
	docker push $REPOPREFIX$DISTRO:${RELEASE%:*}${NARCH:+-$ARCH}

    # tag_stages

    echo "Done $RELEASE${NARCH:+-$ARCH}"
}

tag_stages() {
    for STAGE in $(sed -n 's/^FROM.*AS \+//p' "$DOCKERFILE")
    do
	docker build -q --target=$STAGE \
		-t temp/$STAGE:${RELEASE%:*}${NARCH:+-$ARCH} \
	    --build-arg=RELEASE=$RELEASE \
	    ${NARCH:+--build-arg=ARCH=$ARCH} \
	    ${MIRROR:+--build-arg=MIRROR=$MIRROR} \
	    ${DEBSCRIPT:+--build-arg=DEBSCRIPT=$DEBSCRIPT} \
	    ${DEBOPTIONS:+--build-arg=DEBOPTIONS="$DEBOPTIONS"} \
	    -< "$DOCKERFILE"
    done
}

    # 4.10 -- Warty Warthog
    # amd64 vsyscall=emulate
    # 5.04 -- Hoary Hedgehog
    # amd64 vsyscall=emulate
    # 5.10 -- Breezy Badger
    # amd64 vsyscall=emulate
    # 6.06 LTS -- Dapper Drake
    # amd64 vsyscall=emulate
    # 6.10 -- Edgy Eft
    # amd64 vsyscall=emulate
    # 7.04 -- Feisty Fawn
    # amd64 vsyscall=emulate
    # 7.10 -- Gutsy Gibbon
    # 8.04 LTS -- Hardy Heron
    # 8.10 -- Intrepid Ibex
    # 9.04 -- Jaunty Jackalope
    # 9.10 -- Karmic Koala
    # 10.04 LTS -- Lucid Lynx
    # 10.10 -- Maverick Meerkat
    # 11.04 -- Natty Narwhal
    # 11.10 -- Oneiric Ocelot
    # 12.04 LTS -- Precise Pangolin
    # 12.10 -- Quantal Quetzal
    # 13.04 -- Raring Ringtail
    # 13.10 -- Saucy Salamander
    # 14.04 LTS -- Trusty Tahr
    # 14.10 -- Utopic Unicorn
    # 15.04 -- Vivid Vervet
    # 15.10 -- Wily Werewolf
    # 16.04 LTS -- Xenial Xerus
    # 16.10 -- Yakkety Yak
    # 17.04 -- Zesty Zapus
    # 17.10 -- Artful Aardvark
    # 18.04 LTS -- Bionic Beaver
    # 18.10 -- Cosmic Cuttlefish
    # 19.04 -- Disco Dingo
    # 19.10 -- Eoan Ermine
    # 20.04 LTS -- Focal Fossa
    # 20.10 -- Groovy Gorilla

ubuntu_versions() {

    local RELEASE="$1"
    case "$RELEASE" in
    dapper|hardy|lucid|precise|trusty|xenial|bionic|focal|jammy )
	# LTS
	DISTRO=ubuntu
	;;

    warty|hoary|breezy|edgy|feisty|gutsy|intrepid|jaunty|karmic|maverick )
	DISTRO=ubuntu ;;
    natty|oneiric|quantal|raring|saucy|utopic|vivid|wily|yakkety|zesty )
	DISTRO=ubuntu ;;
    artful|cosmic|disco|eoan )
	DISTRO=ubuntu ;;

    groovy ) DISTRO=ubuntu ;;

    hirsute|impish|jammy|kinetic|lunar|mantic ) DISTRO=ubuntu ;;
    esac
}

devuan_versions() {
    local RELEASE="$1"
    case "$RELEASE" in
    jessie|jessie:devuan )
	DISTRO=devuan
	;;
    ascii|beowulf|chimaera|daedalus|excalibur|ceres )
	DISTRO=devuan
	;;
    devuan ) # Alias for devuan/stable
	DISTRO=devuan
	;;
    esac
}

version_notes() {
case `cat /etc/debian_version` in
1.1* ) APTID=buzz ;;
1.2* ) APTID=rex ;;
1.3* ) APTID=bo ;;
2.0* ) APTID=hamm ;;
2.1* ) APTID=slink ;;
2.2* ) APTID=potato ;;
3.0* ) APTID=woody ;;
3.1* ) APTID=sarge ;;
4.* ) APTID=etch ;;
5.* ) APTID=lenny ;;
6.* ) APTID=squeeze ;;
7.* ) APTID=wheezy ;;
8.* ) APTID=jessie ;;
9.* ) APTID=stretch ;;
10.* ) APTID=buster ;;
11.* ) APTID=bookworm ;;
12.* ) APTID=trixie ;;
esac
}

build_images "$@"
